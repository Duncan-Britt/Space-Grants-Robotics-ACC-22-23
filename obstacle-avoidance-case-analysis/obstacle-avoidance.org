#+TITLE: Obstacle Avoidance
#+SUBTITLE: Case Analysis
#+AUTHOR: Duncan Britt
#+OPTIONS: num:nil toc:nil
#+LATEX_CLASS: article
#+LATEX_CLASS_OPTIONS: [letterpaper]
#+LATEX_HEADER: \usepackage[margin=1in]{geometry}
#+HTML_HEAD_EXTRA: <style>.org-src-name{font-size: x-small;}.listing-number{display: none}</style> <base target="_blank">
#+LATEX_HEADER: \usepackage{placeins}
#+LATEX_HEADER: \usepackage{amsmath}
#+LATEX_HEADER: \usepackage{graphicx}
#+LATEX_HEADER: \usepackage{subcaption}
#+LATEX_HEADER: \usepackage{tikz}
#+LATEX_HEADER: \usepackage{upgreek}
#+LATEX_HEADER: \usepackage[separate-uncertainty=true, multi-part-units=single]{siunitx}
#+LATEX_HEADER: \tikzset{every picture/.style={line width=0.75pt}} %set default line width to 0.75pt
#+LATEX_HEADER: \usepackage{multicol}
#+LATEX_HEADER: \usepackage{setspace}
#+LATEX_HEADER: \usepackage{marvosym}
#+LATEX_HEADER: \setstretch{1.65}
#+LATEX_HEADER: \usepackage{centernot}
#+LATEX_HEADER: \usepackage{pifont}% http://ctan.org/pkg/pifont
#+LATEX_HEADER: \usepackage{tabularray}
#+LATEX_HEADER: \usepackage{svg}
#+LATEX_HEADER: \newcommand{\cmark}{\ding{51}}%
#+LATEX_HEADER: \newcommand{\xmark}{\ding{55}}%

#+MACRO: src src_sh[:exports code]{$1}
#+MACRO: image-width #+ATTR_LATEX: :width 300px

The purpose of this document is to describe and contrast a couple of strategies for detecting obstacles, and to show their strengths and weaknesses by analyzing their performance in a variety of contexts.

* Strategy $A$
Strategy $A$ aims to prevent any obstacles from entering the radial extent of the robot using a front facing distance sensor mounted on a servo, continuously sweeping side to side.

[[./strategy-a.png]]

# Let $r_L$, $r_C$, and $r_R$, be the readings from the left, center, and right distance sensors, respectively, at time $t$.
# Let $\Delta r$ be the change in this readings.
Let $r$ be the reading from the distance sensor at time $t$.
Let $\upphi$ be the angle of inclination of the robot at time $t$.
Let $\uptheta$ be the maximum angle of inclination that we decide is safe for the robot.
The distance sensor would be aimed $\uptheta$ degrees below the horizontal axis with respect to the robot.

{{{image-width}}}
[[./strategy-a2.png]]

The robot would determine that there is an obstacle if
- the distance reading is sufficiently different from the distance reading that would be predicted by level ground, and
- the rate of change in the distance reading is not small
\begin{align*}
A(r) = \left( \lvert r - r_{level} \rvert > \mathrm{threshold} \right) \land \left( \Delta r > \mathrm{threshold} \right)
\end{align*}
This strategy successfully handles cases 1-6 from the table below, but fails case 7.

* Strategy $A^{'}$
To overcome this, a slight modification to the previous strategy involves considering the robot's angle of inclination. If we assume that the terrain we will face in April will be sandy enough that there won't be holes on steep inclines, then we could decide that the extent to which we are concerned about holes is a function of the angle of inclination.

\begin{align*}
A^{'}(r) = & \left[ \left( r > r_{level} + \mathrm{threshold(\upphi)} \right) \land \left( \Delta r > \mathrm{threshold} \right) \right] \\
& \lor \left[ \left( r < r_{level} - \mathrm{threshold} \right) \land \left( \Delta r > \mathrm{threshold} \right) \right]
\end{align*}

* Strategy $B$
Strategy $B$ does not attempt to prevent obstacles from entering the radial extend of the robot. It only attempts to prevent the robot from contacting obstacles.

[[./strategy-b.png]]

We would put infrared sensors facing down, or at a slight angle from the vertical axis, on the front and outer sides of the wheels, as well as on the underside of the middle of the chassis. These would be our hole detectors. We would also have a crossbar attached to a touch sensor on the front of the robot and touch sensors on the sides of the wheels.

We could then determine the presence of obstacles if they touch the front or sides of the robot, and we would find holes when we run into them.

* Advantages & Disadvantages

$A$ is perhaps more complicated and difficult to get right. There's a lot of math involved. It also fails the case where the robot runs into grass. There's a concern that we might mistakenly detect a hole where none exists when coming over hills. $A'$ tries to solve this, but it isn't obvious how successful the strategy will be. But, $A$ and $A^'$ have the advantage that they avoid obstacles entering the radial extend of the robot. This makes path planning much easier, as we would always know that we could turn $360^{\circ}$ to face whichever direction we'd like to go.

$B$ is more straightforward and handles more cases than $A$, but has the disadvantage that it requires many more sensors and doesn't prevent obstacles from entering the radial extent of the robot. This makes path planning significantly harder.

A modification $B^'$ could be to put a circular bar around the robot so that the touch sensor would detect obstacles on all sides and have infrared sensors below it. This could prevent obstacles from entering the radial extent of the robot and make path planning orders of magnitude easier. 
